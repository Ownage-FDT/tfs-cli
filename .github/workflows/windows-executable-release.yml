name: Windows Executable Release

on:
    workflow_dispatch:

env:
    CLI_NAME: 'tfs'

jobs:
    get-sha:
        name: Get Latest SHA
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the Repository
              uses: actions/checkout@v4
            - name: Get Latest SHA
              id: get-sha
              run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        outputs:
            SHORT_SHA: ${{ steps.get-sha.outputs.SHORT_SHA }}

    get-tag:
        name: Get Latest Tag
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the Repository
              uses: actions/checkout@v4
            - name: Get Latest Tag
              id: get-tag
              run: |
                  git fetch --prune --unshallow
                  echo "TAG_NAME=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT
        outputs:
            TAG_NAME: ${{ steps.get-tag.outputs.TAG_NAME }}

    pack-windows-executable:
        name: Pack Windows Executable
        runs-on: ubuntu-latest
        needs: [get-tag, get-sha]
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}

        steps:
            - name: Checkout the Repository
              uses: actions/checkout@v4
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
                  cache: yarn
            - name: Set up Homebrew
              id: set-up-homebrew
              uses: Homebrew/actions/setup-homebrew@master
            - name: Install Homebrew Dependencies
              run: brew install nsis
            - name: Install Node Dependencies
              run: yarn install --network-timeout 600000
            - name: Pack Windows Executable
              run: yarn pack:win
            - name: Upload Artifacts to S3 Release Channel
              run: yarn upload:win
            - name: Upload Artifact to Github Release Channel
              run: |
                  gh release upload \
                    ${{ needs.get-tag.outputs.TAG_NAME }} \
                    dist/win32/${{env.CLI_NAME}}-${{ needs.get-tag.outputs.TAG_NAME }}-${{ needs.get-sha.outputs.SHORT_SHA }}-x64.exe \
                    --name ${{env.CLI_NAME}}-${{ needs.get-tag.outputs.TAG_NAME }}-x64.exe
                    --clobber \

                  gh release upload \
                    ${{ needs.get-tag.outputs.TAG_NAME }} \
                    dist/win32/${{env.CLI_NAME}}-${{ needs.get-tag.outputs.TAG_NAME }}-${{ needs.get-sha.outputs.SHORT_SHA }}-x86.exe \
                    --name ${{env.CLI_NAME}}-${{ needs.get-tag.outputs.TAG_NAME }}-x86.exe
                    --clobber \

    notify-complete-fail:
        if: ${{ failure() || cancelled() }}
        needs: [pack-windows-executable]
        name: Notify Release Failed
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the Repository
              uses: actions/checkout@v4
            - name: Slack Notification
              uses: rtCamp/action-slack-notify@v2
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
                  SLACK_COLOR: '#ff3333'
                  SLACK_USERNAME: CLI Release Bot
                  SLACK_ICON_EMOJI: ':ship:'
                  SLACK_TITLE: 'TFS ClI'
                  SLACK_MESSAGE: 'Windows Executable Release Failed'
                  MSG_MINIMAL: actions url
