name: Tarballs Release

on:
    workflow_call:
        inputs:
            cli_name:
                type: string
                description: 'The name of the CLI'
                default: 'tfs'
                required: false

jobs:
    tarballs-release:
        name: Release Tarballs
        runs-on: ubuntu-latest
        permissions:
            contents: write
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
        steps:
            - name: Checkout the Repository
              uses: actions/checkout@v4
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
                  cache: yarn
            - name: Get Latest SHA
              id: get-sha
              run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
            - name: Get Latest Tag
              id: get-tag
              run: |
                  git fetch --prune --unshallow
                  echo "TAG_NAME=$(git fetch --prune --unshallow && git describe --tags $(git rev-list --tags --max-count=1) | cut -c 2-)" >> $GITHUB_OUTPUT
            - name: Install Node Dependencies
              run: yarn install --network-timeout 600000
            - name: Pack Tarballs
              run: yarn pack:tarballs
            - name: Upload Artifacts to S3 Release Channel
              run: yarn upload:tarballs
            - name: Promote Windows Release on S3
              run: yarn promote --version ${{ steps.get-tag.outputs.TAG_NAME }} --sha ${{ steps.get-sha.outputs.SHORT_SHA }} --no-xz

    notify-complete-fail:
        if: ${{ failure() || cancelled() }}
        needs: [tarballs-release]
        name: Notify Release Failed
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the Repository
              uses: actions/checkout@v4
            - name: Slack Notification
              uses: rtCamp/action-slack-notify@v2
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
                  SLACK_COLOR: '#ff3333'
                  SLACK_USERNAME: CLI Release Bot
                  SLACK_ICON_EMOJI: ':ship:'
                  SLACK_TITLE: 'TFS ClI'
                  SLACK_MESSAGE: 'Tarballs Release Failed'
                  MSG_MINIMAL: actions url
